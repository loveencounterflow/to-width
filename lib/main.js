// Generated by CoffeeScript 1.10.0
(function() {
  var CND, alert, badge, debug, echo, help, info, log, rpr, urge, warn, whisper;

  CND = require('cnd');

  rpr = CND.rpr.bind(CND);

  badge = 'TO-WIDTH';

  log = CND.get_logger('plain', badge);

  info = CND.get_logger('info', badge);

  whisper = CND.get_logger('whisper', badge);

  alert = CND.get_logger('alert', badge);

  debug = CND.get_logger('debug', badge);

  warn = CND.get_logger('warn', badge);

  help = CND.get_logger('help', badge);

  urge = CND.get_logger('urge', badge);

  echo = CND.echo.bind(CND);

  this._width_of_string = require('string-width');

  this._Wcstring = require('wcstring');

  this.to_width = function(me, width, settings) {

    /* Fit text into `width` columns, taking into account ANSI color codes (that take up bytes but not width)
    and double-width glyphs such as CJK characters.
     */
    var R, ellipsis, old_width, padder, ref, ref1, width_1;
    if (!(width >= 2)) {
      throw new Error("width must at least be 2, got " + width);
    }
    padder = (ref = settings != null ? settings['padder'] : void 0) != null ? ref : ' ';
    ellipsis = (ref1 = settings != null ? settings['ellipsis'] : void 0) != null ? ref1 : 'â€¦';
    R = me;
    old_width = this.width_of(R);
    if (old_width === width) {
      return R;
    }
    if (old_width > (width_1 = width - 1)) {

      /* `WCString` occasionally is off by one, so here we fix that: */
      R = (new this._Wcstring(me)).truncate(width_1, '');
      R += ellipsis + ((this.width_of(R)) < width_1 ? ellipsis : '');
    } else {
      R = R + ' '.repeat(width - old_width);
    }
    return R;
  };

  this.width_of = (function(_this) {
    return function(me) {
      return _this._width_of_string(me);
    };
  })(this);

}).call(this);

//# sourceMappingURL=main.js.map
